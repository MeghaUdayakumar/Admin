{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/Service/admin.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"container-fluid mt-2 p-5\">\n    <div class=\"row\">\n        <div class=\"col-4\">\n            <h1>ADD OUTLET</h1>\n            <form  #f =\"ngForm\" name=\"form\" (submit)= \"onSubmit(f)\">\n                <div class=\"form-group\">\n                  <label>OutletName</label>\n                  <input [(ngModel)] = \" admin.OutletName\" name =\" OutletName\" type=\"text\" class=\"form-control\" >\n                </div>\n                <div class=\"form-group\">\n                  <label>StreetName</label>\n                  <input [(ngModel)] = \" admin.StreetName\" name =\" StreetName\"type=\"text\" class=\"form-control\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Landmark</label>\n                    <input [(ngModel)] = \" admin.Landmark\" name =\" Landmark\" type=\"text\" class=\"form-control\">\n                  </div>\n                <div class=\"form-group\">\n                    <label>No_of_AvaiFoodItems</label>\n                    <input [(ngModel)] = \" admin.No_of_AvaiFoodItems\" name =\" No_of_AvaiFoodItems\" type=\"text\" class=\"form-control\">\n                  </div>\n                <div class=\"form-group\">\n                    <label>Req_Volunteer</label>\n                    <input [(ngModel)] = \" admin.Req_Volunteer\" name =\" Req_Volunteer\" type=\"text\" class=\"form-control\">\n                  </div>\n                <div class=\"form-group\">\n                    <label>OrderDate</label>\n                    <input [(ngModel)] = \" admin.OrderDate\" name =\" OrderDate\" type=\"text\" class=\"form-control\">\n                  </div>\n                <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n              </form>\n        </div>\n        <div class=\"col-6\">\n            <table class=\"table\">\n                <thead>\n                  <tr>\n                    <th><i class=\"bi bi-box-arrow-in-left\">edit</i></th>\n                    <th>id</th>\n                    <th>OutletName</th>\n                    <th>StreetName</th>\n                    <th>Landmark</th>\n                    <th>No_of_AvaiFoodItems</th>\n                    <th>Req_Volunteer</th>\n                    <th>OrderDate</th>\n                    \n                  </tr>\n                </thead>\n                <tbody *ngFor=\"let outlet of outletList\">\n                  <tr>\n                    \n                    <td>{{outlet.OutletName}}</td>\n                    <td>{{outlet.StreetName}}</td>\n                    <td>{{outlet.Landmark}}</td>\n                    <td>{{outlet.No_of_AvaiFoodItems}}</td>\n                    <td>{{outlet.Req_Volunteer}}</td>\n                    <td>{{outlet.OrderDate}}</td>\n                  </tr>\n                  \n                  \n                </tbody>\n              </table>\n            \n        </div>\n\n        \n    </div>\n\n</div>\n\n","import { ThisReceiver } from '@angular/compiler';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AdminService } from 'src/Service/admin.service';\n\nexport class AdminModel{\n  id?:any;\n  OutletName:string;\n  StreetName:string;\n  Landmark:string;\n  No_of_AvaiFoodItems:string;\n  Req_Volunteer:string;\n  OrderDate:string;\n\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  outletList: AdminModel[]=[];\n  \n  constructor(private adminService:AdminService){}\n  \n\n   admin:AdminModel = new AdminModel();\n\n   onSubmit(form:NgForm):void\n   {\n    console.log(form.value);\n    this.adminService.Create(form.value).subscribe(resp=>{\n      console.log(resp);\n      form.resetForm();\n      this.getAll();\n    })\n   }\n\n   getAll():void\n   {\n    this.adminService.GetAll().subscribe(resp=>{\n      console.log(resp);\n      this.outletList= resp;\n    })\n   }\n   ngOnInit(): void {\n    this.getAll();\n  }\n\n  \n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from '@angular/common/http'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AdminService } from 'src/Service/admin.service';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n\n    \n  ],\n  providers: [AdminService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AdminModel } from 'src/app/app.component';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  private readonly URL:string=\"https://localhost:5000/api/outlet\"\n\n  constructor(private http:HttpClient) { }\n\n  Create(data:AdminModel):Observable<AdminModel>\n  {\n    return this.http.post<AdminModel>(this.URL, data);\n  }\n\n  GetAll():Observable<AdminModel[]>\n  {\n    return this.http.get<AdminModel[]>(this.URL);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}